<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="d56d2a4c-118d-4120-a0fe-8ff830a84cf3" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2025.3/project-config.xsd">
  <name>Build</name>
  <description />
  <settings>
    <options>
      <option name="checkoutDirectory" value="portfolio" />
      <option name="checkoutMode" value="ON_AGENT" />
    </options>
    <parameters>
      <param name="SectionDirctory" value="%system.teamcity.build.checkoutDir%/src/data/sections" />
      <param name="env.DOTNET_CLI_HOME" value="/tmp" />
    </parameters>
    <build-runners>
      <runner id="Set_Version" name="Set Version" type="simpleRunner">
        <parameters>
          <param name="script.content" value="npx nbgv cloud" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="simpleRunner_1" name="" type="simpleRunner">
        <parameters>
          <param name="script.content" value="npm install" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="NPM_Build" name="NPM Build" type="simpleRunner">
        <parameters>
          <param name="script.content" value="npm run build" />
          <param name="teamcity.build.workingDir" value="dist" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="CSpell" name="CSpell" type="simpleRunner">
        <parameters>
          <param name="script.content" value="npx cspell &quot;**/*.{js,ts,md,txt}&quot;" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="sdsdds" name="sdsdds" type="jetbrains_powershell">
        <parameters>
          <param name="jetbrains_powershell_execution" value="PS1" />
          <param name="jetbrains_powershell_noprofile" value="true" />
          <param name="jetbrains_powershell_script_code"><![CDATA[string nbgvCommand = IsServerBuild ? "cloud --format json" : "get-version --format json";
string versionOutput = null;
  
Process process = new Process
{
    StartInfo = new ProcessStartInfo
    {
        FileName = RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? "cmd.exe" : "/bin/bash",
        Arguments = RuntimeInformation.IsOSPlatform(OSPlatform.Windows)
            ? $"/c npx nbgv {nbgvCommand}"
            : $"-c \"npx nbgv {nbgvCommand}\"",
        UseShellExecute = false,
        RedirectStandardOutput = true,
        RedirectStandardError = true,
        CreateNoWindow = true,
        WorkingDirectory = Environment.CurrentDirectory
    }
};

try
{
    process.Start();
    // Read streams asynchronously to avoid deadlocks
    Task<string> outputTask = process.StandardOutput.ReadToEndAsync();
    Task<string> errorTask = process.StandardError.ReadToEndAsync();
    process.WaitForExit();
    string output = await outputTask;
    string error = await errorTask;
    if (process.ExitCode == 0)
    {
        versionOutput = output.Trim();
        Serilog.Log.Information($"Successfully generated version using nbgv");
    }
    else
    {
        Serilog.Log.Error($"NBGV failed with exit code {process.ExitCode}");
        if (!string.IsNullOrEmpty(output))
        {
            Serilog.Log.Error($"NBGV Output: {output}");
        }
        if (!string.IsNullOrEmpty(error))
        {
            Serilog.Log.Error($"NBGV Error: {error}");
        }
    }
}]]></param>
          <param name="jetbrains_powershell_script_mode" value="CODE" />
          <param name="teamcity.step.mode" value="execute_if_failed" />
        </parameters>
      </runner>
      <runner id="Set_Version_1" name="Set Version (1)" type="jetbrains_powershell">
        <parameters>
          <param name="jetbrains_powershell_execution" value="PS1" />
          <param name="jetbrains_powershell_noprofile" value="true" />
          <param name="jetbrains_powershell_script_code"><![CDATA[param(
    [Parameter(Mandatory=$true)]
    [string]$Version
)

Write-Host "Updating package.json and package-lock.json to version $Version"

function Update-JsonVersion {
    param(
        [string]$FilePath,
        [string]$NewVersion
    )
    
    if (-not (Test-Path $FilePath)) {
        Write-Warning "$FilePath not found, skipping..."
        return
    }
    
    Write-Host "Updating $FilePath..." -ForegroundColor Cyan
    
    $content = Get-Content $FilePath -Raw
    $pattern = '("version"\s*:\s*)"[^"]*"'
    $replacement = "`$1`"$NewVersion`""
    
    if ($content -match $pattern) {
        $newContent = $content -replace $pattern, $replacement
        Set-Content -Path $FilePath -Value $newContent -NoNewline -Encoding UTF8
        Write-Host "âœ“ Successfully updated $FilePath" -ForegroundColor Green
    }
    else {
        Write-Warning "Could not find version field in $FilePath"
    }
}

# Update both files
Update-JsonVersion -FilePath "package.json" -Version %build.number%
Update-JsonVersion -FilePath "package-lock.json" -Version %build.number%

Write-Host "`nVersion update complete!" -ForegroundColor Green]]></param>
          <param name="jetbrains_powershell_script_mode" value="CODE" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Portfolio_HttpsGithubComGurdipS5leadOpsShowcaseHubRefsHeadsMain" />
    </vcs-settings>
    <requirements>
      <equals id="RQ_2" name="npm" value="true" />
    </requirements>
    <build-triggers>
      <build-trigger id="TRIGGER_8" type="vcsTrigger">
        <parameters>
          <param name="branchFilter" value="+:*" />
          <param name="enableQueueOptimization" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
          <param name="triggerRules" value="-:comment=regex:\[skip ci\]" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="perfmon" type="perfmon">
        <parameters>
          <param name="teamcity.perfmon.feature.enabled" value="true" />
        </parameters>
      </extension>
    </build-extensions>
  </settings>
</build-type>

